{"version":3,"sources":["config/firebaseConfig.js","component/layout/SignedInLinks.js","redux/store/actions/auth.js","component/layout/SignedOutLinks.js","component/layout/NavBar.js","component/project/ProjectDetails.js","component/project/ProjectSummary.js","component/project/ProjectList.js","component/dashboard/Notifications.js","component/dashboard/Dashboard.js","redux/store/actions/project.js","redux/store/actions/notification.js","component/auth/SignIn.js","component/auth/SignUp.js","component/project/CreateProject.js","App.js","serviceWorker.js","redux/store/reducers/authReducer.js","redux/store/reducers/projectReducer.js","redux/store/reducers/notificationReducer.js","redux/store/reducers/rootReducer.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","mapDispatchToProps","signout","dispatch","getState","auth","signOut","then","response","type","payload","connect","state","login","authError","userSignOut","props","console","log","className","to","onClick","SignedOutLinks","isLogin","ProjectDetails","loading","getAppProjects","currentProject","this","title","content","firstName","lastName","nextProps","prevState","newState","getAllProjects","match","params","id","Component","project","getProjects","ProjectSummary","createdAt","JSON","stringify","ProjectList","projects","map","index","key","Notifications","notificationArray","noti","time","seconds","user","Dashboard","getCurrentUser","getAllNotifications","notification","Promise","a","collection","get","responseSnap","data","forEach","responseData","push","catch","responseSnapErr","err","UID","doc","snapshot","currentUser","uid","getNotification","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","email","password","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","error","SignUp","signUp","userSignUp","newUser","createUserWithEmailAndPassword","set","initials","message","CreateProject","createProject","history","add","Date","App","exact","path","component","Boolean","window","location","hostname","initState","authReducer","action","projectReducer","createProjectError","notificationReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f49d9651.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/analytics\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyA4n9B_VF6mr89WICLHJqvHA_RMqg47F_E\",\r\n  authDomain: \"react-firebase-db-host-app.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-db-host-app.firebaseio.com\",\r\n  projectId: \"react-firebase-db-host-app\",\r\n  storageBucket: \"react-firebase-db-host-app.appspot.com\",\r\n  messagingSenderId: \"571627584111\",\r\n  appId: \"1:571627584111:web:68bb0a10aaf1aeef716b9a\",\r\n  measurementId: \"G-RDDQBWDX4Z\"\r\n};\r\n// Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n// export default firebase;\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n// export const firebaseAnalytics = firebaseApp.analytics();\r\nexport const firestore = firebaseApp.firestore();\r\nexport default firebaseApp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signout } from \"../../redux/store/actions/auth\";\r\nconst SignedInLinks = props => {\r\n  console.log(\"TCL: SignedInLinks props\", props);\r\n  const initials = \"GB\";\r\n\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/createProject\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={() => props.signout()}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    login: state.auth.login,\r\n    authError: state.auth.authError,\r\n    userSignOut: state.auth.signOut\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signout\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import firebase, { firestore } from '../../../config/firebaseConfig';\r\n\r\nexport const signIn = credentials => {\r\n\treturn dispatch =>\r\n\t\tnew Promise(async () => {\r\n\t\t\treturn firebase\r\n\t\t\t\t.auth()\r\n\t\t\t\t.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n\t\t\t\t.then(async response => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'LOGIN_SUCCESS',\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tdata: response\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.catch(async error => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'LOGIN_ERROR',\r\n\t\t\t\t\t\tpayload: error\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}).catch(err => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'LOGIN_ERROR',\r\n\t\t\t\tpayload: err\r\n\t\t\t});\r\n\t\t});\r\n};\r\n\r\nexport const signout = () => {\r\n\treturn (dispatch, getState) => {\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signOut()\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'LOGIN_SUCCESS',\r\n\t\t\t\t\tpayload: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signUp = newUser => {\r\n\treturn (dispatch, getState) => {\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn firestore\r\n\t\t\t\t\t.collection('users')\r\n\t\t\t\t\t.doc(response.user.uid)\r\n\t\t\t\t\t.set({\r\n\t\t\t\t\t\tfirstName: newUser.firstName,\r\n\t\t\t\t\t\tlastName: newUser.lastName,\r\n\t\t\t\t\t\tinitials: newUser.firstName[0] + newUser.lastName[0]\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SIGN_UP',\r\n\t\t\t\t\tpayload: true\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SIGN_UP_ERROR',\r\n\t\t\t\t\tpayload: err.message\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const getCurrentUser = UID => {\r\n\tconsole.log(\"TCL: UID\", UID)\r\n\tlet user = firebase.auth();\r\n\tconsole.log(\"TCL: user\", user)\r\n\treturn (dispatch, getState) => {\r\n\t\tfirestore\r\n\t\t\t.collection('users')\r\n\t\t\t.doc()\r\n\t\t\t.get()\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tconsole.log(\"TCL: snapshot\", snapshot.data())\r\n\t\t\t\tconsole.log(\"TCL: snapshot\", snapshot.id)\r\n\t\t\t\tvar currentUser = {\r\n\t\t\t\t\tuid: snapshot.id,\r\n\t\t\t\t\t...snapshot.data()\r\n\t\t\t\t}\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'CURRENT_USER',\r\n\t\t\t\t\tpayload: currentUser\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log('Error getting documents', err);\r\n\t\t\t});\r\n\r\n\r\n\t};\r\n};\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin \">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\nconst NavBar = props => {\r\n  console.log(\"TCL:NavBar props\", props);\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          React Firebase\r\n        </Link>\r\n        {props.isLogin ? <SignedInLinks /> : <SignedOutLinks />}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  console.log(\"TCL: mapStateToProps state\", state);\r\n  return {\r\n    isLogin: state.auth.login ? true : false\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass ProjectDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      getAppProjects: null,\r\n      currentProject: null\r\n    };\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    console.log(\r\n      \"TCL: ProjectDetails -> getDerivedStateFromProps -> nextProps\",\r\n      nextProps\r\n    );\r\n    let newState = prevState;\r\n    if (nextProps.getAllProjects) {\r\n      newState.getAppProjects = nextProps.getAllProjects;\r\n      if (\r\n        nextProps.match &&\r\n        nextProps.match.params &&\r\n        nextProps.match.params.id\r\n      )\r\n        newState.currentProject =\r\n          nextProps.getAllProjects[nextProps.match.params.id];\r\n    }\r\n\r\n    return newState === prevState ? prevState : newState;\r\n  }\r\n  render() {\r\n    const { getAppProjects, currentProject } = this.state;\r\n    const { isLogin } = this.props;\r\n    if (!isLogin) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    console.log(\r\n      \"TCL: ProjectDetails -> render -> currentProject\",\r\n      currentProject\r\n    );\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        {currentProject ? (\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">{currentProject.title}</span>\r\n              <p>{currentProject.content}</p>\r\n            </div>\r\n            <div className=\"card-action gret lighten-4 green-text\">\r\n              <div>\r\n                Posted by {currentProject.firstName} {currentProject.lastName}\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    getAllProjects: state.project.getProjects,\r\n    isLogin: state.auth.login\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProjectDetails);\r\n","import React from \"react\";\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-test text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>{project.content}</p>\r\n        <p className=\"grey-text\">{project && project.createdAt && JSON.stringify(project.createdAt)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map((project, index) => {\r\n        return (\r\n          <Link to={`/project/${ project.id }`} key={index}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectList;\r\n","import React from \"react\";\r\n\r\nconst Notifications = ({ notificationArray }) => {\r\n  return (\r\n    <div className=\"secction\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className='card-title'>Notifications</span>\r\n          <ul className='notifications'>\r\n            {notificationArray && notificationArray.map(noti => {\r\n              return (\r\n                <li key={noti.time.seconds}>\r\n                  <span className=\"pink-text\">\r\n                    {noti.user}\r\n                  </span><br />\r\n                  <span>{noti.content}</span><br />\r\n                  <div className=\"grey-text note-date\">{noti.time.seconds}</div>\r\n                  <hr />\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\nexport default Notifications;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getCurrentUser } from '../../redux/store/actions/auth';\r\nimport { getAllNotifications } from '../../redux/store/actions/notification';\r\nimport { getProjects } from '../../redux/store/actions/project';\r\nimport ProjectList from '../project/ProjectList';\r\nimport Notifications from './Notifications';\r\nclass Dashboard extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tloading: false,\r\n\t\t\tprojects: null,\r\n\t\t\tnotificationArray: []\r\n\t\t};\r\n\t}\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tlet newState = prevState;\r\n\r\n\t\tnewState.projects = nextProps.getAllProjects;\r\n\t\tnewState.notificationArray = nextProps.notification\r\n\r\n\t\treturn newState === prevState ? prevState : newState;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getProjects();\r\n\t\tthis.props.getCurrentUser();\r\n\t\tthis.props.getAllNotifications()\r\n\t}\r\n\trender() {\r\n\t\tconst { projects, notificationArray } = this.state;\r\n\t\tconst { isLogin } = this.props;\r\n\t\tif (!isLogin) {\r\n\t\t\treturn <Redirect to=\"/signin\" />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"dashboard container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col s12 m6\">\r\n\t\t\t\t\t\t<ProjectList projects={projects} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col s12 m5 offset-m1\">{projects ? <Notifications notificationArray={notificationArray} /> : <span>loading...</span>}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tgetAllProjects: state.project.getProjects,\r\n\t\tisLogin: state.auth.login,\r\n\t\tnotification: state.notification.getNotification\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tgetProjects,\r\n\tgetCurrentUser,\r\n\tgetAllNotifications\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import { firestore } from '../../../config/firebaseConfig';\r\n\r\nexport const createProject = project => {\r\n\treturn (dispatch, getState) => {\r\n\t\tfirestore\r\n\t\t\t.collection('projects')\r\n\t\t\t.add({\r\n\t\t\t\t...project,\r\n\t\t\t\tfirstName: 'Gaurav',\r\n\t\t\t\tlastName: 'Bagul',\r\n\t\t\t\t// id: 12345,\r\n\t\t\t\tcreatedAt: new Date()\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'CREATE_PROJECT',\r\n\t\t\t\t\tpayload: project\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'CREATE_PROJECT_ERROR',\r\n\t\t\t\t\tpayload: error\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const getProjects = () => {\r\n\treturn dispatch =>\r\n\t\tnew Promise(async () => {\r\n\t\t\tawait firestore\r\n\t\t\t\t.collection('projects')\r\n\t\t\t\t.get()\r\n\t\t\t\t.then(async responseSnap => {\r\n\t\t\t\t\tlet data = [];\r\n\t\t\t\t\tawait responseSnap.forEach(responseData => {\r\n\t\t\t\t\t\tdata.push(responseData.data());\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait dispatch({\r\n\t\t\t\t\t\ttype: 'GET_PROJECTS',\r\n\t\t\t\t\t\tpayload: data\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(responseSnapErr => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'GET_PROJECTS',\r\n\t\t\t\t\t\tpayload: []\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log('Error retriving contacts ' + err);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'GET_PROJECTS',\r\n\t\t\t\tpayload: []\r\n\t\t\t});\r\n\t\t});\r\n};\r\n","import { firestore } from '../../../config/firebaseConfig';\r\n\r\nexport const getAllNotifications = () => {\r\n    return dispatch =>\r\n        new Promise(async () => {\r\n            await firestore\r\n                .collection('notifications')\r\n                .get()\r\n                .then(async responseSnap => {\r\n                    let data = [];\r\n                    responseSnap.forEach(responseData => {\r\n                        data.push(responseData.data());\r\n                    });\r\n                    await dispatch({\r\n                        type: 'GET_NOTIFICATION',\r\n                        payload: data\r\n                    });\r\n                })\r\n                .catch(responseSnapErr => {\r\n                    dispatch({\r\n                        type: 'GET_NOTIFICATION',\r\n                        payload: []\r\n                    });\r\n                });\r\n        }).catch(err => {\r\n            console.log('Error retriving contacts ' + err);\r\n            dispatch({\r\n                type: 'GET_NOTIFICATION',\r\n                payload: []\r\n            });\r\n        });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../redux/store/actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      login: {}\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = prevState;\r\n\r\n    newState.login = nextProps.login;\r\n\r\n    return newState === prevState ? prevState : newState;\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { isLogin, authError } = this.props;\r\n    if (isLogin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={e => this.handleSubmit(e)} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">SignIn</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLogin: state.auth.login,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signIn\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../redux/store/actions/auth\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { isLogin, authError, userSignUp } = this.props;\r\n    if (isLogin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={e => this.handleSubmit(e)} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          {authError ? (\r\n            <div className=\"red-text center\">\r\n              <p>{userSignUp}</p>\r\n            </div>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLogin: state.auth.login,\r\n    authError: state.auth.authError,\r\n    userSignUp: state.auth.signUp\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  signUp\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../redux/store/actions/project\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    console.log(\"TCL: CreateProject -> e\", e.target.id);\r\n    console.log(\"TCL: CreateProject -> e.target.value\", e.target.value);\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(\"TCL: CreateProject ->  e\", this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  };\r\n\r\n  render() {\r\n    const { isLogin } = this.props;\r\n    if (!isLogin) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={e => this.handleSubmit(e)} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLogin: state.auth.login\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./component/layout/NavBar\";\nimport ProjectDetails from \"./component/project/ProjectDetails\";\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport SignIn from \"./component/auth/SignIn\";\nimport SignUp from \"./component/auth/SignUp\";\nimport CreateProject from \"./component/project/CreateProject\";\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/createProject\" component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n\tauthError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOGIN_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: 'Login Faild',\r\n\t\t\t\tlogin: null\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogin: action.payload,\r\n\t\t\t\tauthError: null\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'SIGNOUT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsignOut: action.payload,\r\n\t\t\t\tlogin: null\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'SIGN_UP':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogin: action.payload,\r\n\t\t\t\tauthError: null\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'SIGN_UP_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsignUp: action.payload,\r\n\t\t\t\tauthError: true\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'CURRENT_USER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentUser: action.payload\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      return {\r\n        ...state,\r\n        createProject: action.payload\r\n      };\r\n      break;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      return {\r\n        ...state,\r\n        createProjectError: action.payload\r\n      };\r\n      break;\r\n    case \"GET_PROJECTS\":\r\n      return {\r\n        ...state,\r\n        getProjects: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","const initState = {};\r\n\r\nconst notificationReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_NOTIFICATION\":\r\n            return {\r\n                ...state,\r\n                getNotification: action.payload\r\n            };\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default notificationReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport notificationReducer from './notificationReducer'\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n  notification: notificationReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../src/redux/store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nlet store = createStore(persistedReducer, applyMiddleware(thunk));\nlet persistor = persistStore(store);\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}